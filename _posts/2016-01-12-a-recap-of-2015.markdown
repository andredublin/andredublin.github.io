---
layout: post
title: "A recap of 2015"
date: 2016-01-12
comments: true
categories: recap
image: /assets/images/cover.jpg
---

A recap of things that I've discovered, learned, read, met, etc. in 2015 in no particular order old or new.

#### Reading and videos on software
* [40 NPM Modules We Can't Live Without](https://medium.com/startup-study-group/40-npm-modules-we-can-t-live-without-36e29e352e3a#.6ggh5zhhs) - an excellent collection of very hepful node package modules.
* [Functional Composition](http://www.myeyeson.net/functional-composition/) - a gentle introduction in composing and create higher order functions.
* [Functors, Applicatives, And Monads In Pictures](http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html) - more functional programming goodness in pictures.
* [10 Technical Papers Every Programmer Should Read(At Least Twice)](http://blog.fogus.me/2011/09/08/10-technical-papers-every-programmer-should-read-at-least-twice/_ ) - a breadth of information that is useful from a computer science perspective.
* [TPL and async/await Best Practices for the Busy Developer](https://scalablenotions.wordpress.com/2015/05/02/tpl-and-async-await-best-practices-for-the-busy-developer/) - A comprehensive guide to understanding and utilizing the C# task parallel library.
* [What Is Functional Programming](http://blog.jenkster.com/2015/12/what-is-functional-programming.html) - Understanding what makes languages functional.
* [Which Programming Languages Are Functional](http://blog.jenkster.com/2015/12/which-programming-languages-are-functional.html) - Understanding what languages are actually functional.
* [Using Lists with Entity Framework](http://mikestokes.co/programming/2015/02/08/storing-lists-in-entity-framework/) - Necessary if your working with EF complex types.
* [Build 2015 | Channel 9 Service Fabric Session](https://channel9.msdn.com/Events/Build/2015?sort=sequential&direction=desc&term=Service+Fabric#theSessions) - Researching the new service fabric distributed systems for work.
* [Volatility-Based Decomposition](https://www.youtube.com/watch?v=VIC7QW62-Tw) - a coworker introduced me to Juval Lowy's software architecture design, worth the watch.

#### Programming languages that I hope to explore this year
* [Idris](http://www.idris-lang.org/) - Just picked up Type Driven Development in Idris!
* [Go](https://golang.org/) - I explored go a while back, but now a fellow software engineer acquaintance wishes to do some projects in go.
* [F#](http://fsharp.org/) - Honestly I've been playing with F# for the past six months, and I hope to do more open source contributions this year.

#### Papers discovered (and read)
* [In Search of an Understandable Consensus Algorithm](http://ramcloud.stanford.edu/raft.pdf) - Actually read this a while back, but is a worthy of mention here for those that wish to understand the internals of distributed systems without losing their mind.
* [Managing Technical Debt with the SQALE Method](http://www.sqale.org/wp-content/uploads/2013/01/IEEE-SW-Managing-TD-with-SQALE-Accepted-version.pdf) - excellent read on how to analyze and quantify your teams technical debt.

#### Plans for 2016
* Contribute to the visual fsharp power tools
* Write some type providers in fsharp
* Discover some new music
